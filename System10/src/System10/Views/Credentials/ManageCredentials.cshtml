@using Microsoft.AspNetCore.Http.Authentication
@inject SignInManager<ApplicationUser> SignInManager
@model System10.Models.MangeCredentialViewModel

    @{
        ViewData["Title"] = "Create";
    }
    <h2>Create</h2>
    <form asp-action="ManageCredentials">
        <p class="text-info">
            @ViewData["ErroMessage"]
        </p>
        @if(ViewData["action"].ToString() !="ad")
        {

        <div class="form-horizontal">
            <h4>DboCredential</h4>
            <hr />
            <input asp-for="UserName" type="hidden" value="@ViewData["userName"]" />
            
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <a asp-controller="Credentials"
                       asp-action="ResetPassword"
                      >
                        Reset Password
                    </a>
                </div>
            </div>
        </div>
        }
        
       
        </form>
<div class="col-md-4">
    <section>
        <h4>Use another service to log in.</h4>
        <hr />
        @{
            var loginProviders = SignInManager.GetExternalAuthenticationSchemes().ToList();
           
            if (loginProviders.Count == 0)
            {
            <div>
                <p>
                    There are no external authentication services configured. See <a href="http://go.microsoft.com/fwlink/?LinkID=532715">this article</a>
                    for details on setting up this ASP.NET application to support logging in via external services.
                </p>
            </div>
            }
            else
            {
            <form asp-controller="Credentials" asp-action="ExternalLogin" asp-route-returnurl="@ViewData["ReturnUrl"]" method="post" class="form-horizontal">
                @foreach (var provider in loginProviders)
                {

                    var df = Model.localization.SingleOrDefault(x => x.ILocalizationSetId == 1 && x.NvchMaxText == provider.AuthenticationScheme && x.Vchr64LocalizationType == "Title");
                    if (df != null)
                    {
                        List<DboCredentialAlternate> list = Model.dboAlternAte.Where(m => m.ICredentialTypeId == Convert.ToInt32(df.Vchr128Identifier)).ToList();
                        if (list.Count() > 1)
                        {

                            var dbAl = Model.dboAlternAte.FirstOrDefault(m => m.ICredentialTypeId == Convert.ToInt32(df.Vchr128Identifier) && !m.DtInactivated.HasValue);
                            if (dbAl == null)
                            {

                                <div>
                                    <p>
                                        <button type="submit" class="btn btn-default" name="provider" value="@provider.AuthenticationScheme" title="Log in using your @provider.DisplayName account">
                                            <span class="glyphicon glyphicon-plus"></span>
                                        </button>@provider.AuthenticationScheme

                                    </p>
                                </div>

                            }
                            else
                            {
                                <div>
                                    <p>
                                        @*<button type="submit" class="btn btn-default" name="provider" value="@(provider.AuthenticationScheme + "-" + df.Vchr128Identifier)" title="Log in using your @provider.DisplayName account">
                                                <span class="glyphicon glyphicon-remove"></span>@provider.AuthenticationScheme
                                            </button>*@
                                        <button type="submit" class="btn btn-default" name="provider" value="@(provider.AuthenticationScheme + "-" + df.Vchr128Identifier)" title="Log in using your @provider.DisplayName account">
                                             <span class="glyphicon glyphicon-remove"></span>
                                        </button>@provider.AuthenticationScheme


                                    </p>
                                </div>

                            }
                        }
                        else
                        {

                            var dbAl = Model.dboAlternAte.FirstOrDefault(m => m.ICredentialTypeId == Convert.ToInt32(df.Vchr128Identifier));
                            if (dbAl == null)
                            {

                                <div>
                                    <p>
                                        <button type="submit" class="btn btn-default" name="provider" value="@provider.AuthenticationScheme" title="Log in using your @provider.DisplayName account">
                                            <span class="glyphicon glyphicon-plus"></span>
                                        </button>@provider.AuthenticationScheme

                                    </p>
                                </div>
                            }
                            else if (dbAl != null && !dbAl.DtInactivated.HasValue)
                            {
                                <div>
                                    <p>
                                        @*<button type="submit" class="btn btn-default" name="provider" value="@provider.AuthenticationScheme" title="Log in using your @provider.DisplayName account">
                                            <span class="glyphicon glyphicon-plus"></span>
                                        </button>@provider.AuthenticationScheme*@
                                             
                                <button type="submit" class="btn btn-default" name="provider" value="@(provider.AuthenticationScheme + "-" + df.Vchr128Identifier)" title="Log in using your @provider.DisplayName account">
                                    <span class="glyphicon glyphicon-remove"></span>
                                </button>@provider.AuthenticationScheme

                                    </p>
                                </div>

                            }
                            else
                            {
                                <div>
                                    <p>
                                        @*<button type="submit" class="btn btn-default" name="provider" value="@(provider.AuthenticationScheme + "-" + df.Vchr128Identifier)" title="Log in using your @provider.DisplayName account">
                                                <span class="glyphicon glyphicon-remove"></span>@provider.AuthenticationScheme
                                            </button>*@
                                        @*<button type="submit" class="btn btn-default" name="provider" value="@(provider.AuthenticationScheme + "-" + df.Vchr128Identifier)" title="Log in using your @provider.DisplayName account"></button>
                                        <span class="glyphicon glyphicon-remove"></span>@provider.AuthenticationScheme*@
                                        <button type="submit" class="btn btn-default" name="provider" value="@provider.AuthenticationScheme" title="Log in using your @provider.DisplayName account">
                                            <span class="glyphicon glyphicon-plus"></span>
                                        </button>@provider.AuthenticationScheme



                                    </p>
                                </div>


                            }
                        }



                    }




                }
                    
                

            </form>
            }
            }
</section>
</div>

